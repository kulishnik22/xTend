name: flutter windows build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: install dependencies
        run: choco install yq

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.29.0

      - name: flutter clean
        run: flutter clean

      - name: flutter pub get
        run: flutter pub get

      - name: flutter build windows release
        run: flutter build windows --release

      - name: zip output directory
        run: Compress-Archive -Path build\\windows\\x64\\runner\\Release\\* -DestinationPath xTend.zip

      - name: extract app version
        id: get_version
        shell: pwsh
        run: |
          $version=(yq -r .version pubspec.yaml)
          echo VERSION=$version | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append

      - name: extract release notes from CHANGELOG
        id: get_release_notes
        shell: pwsh
        run: |
          $lines = Get-Content CHANGELOG.md
          $notes = @()
          $foundHeader = $false
          foreach ($line in $lines) {
            if ($line -match '^#') {
              if ($foundHeader) { break }
              else { $foundHeader = $true; continue }
            }
            if ($foundHeader) { $notes += $line }
          }
          $releaseNotes = $notes -join "`n"
          echo "RELEASE_NOTES<<EOF" >> $Env:GITHUB_ENV
          echo "$releaseNotes" >> $Env:GITHUB_ENV
          echo "EOF" >> $Env:GITHUB_ENV

      - name: upload github release
        uses: softprops/action-gh-release@v1
        with:
          files: xTend.zip
          tag_name: v${{ env.VERSION }}
          name: xTend v${{ env.VERSION }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: update README
        run: |
          $REPO="${{ github.repository }}"
          $TAG="v${{ env.VERSION }}"
          $URL="https://github.com/$REPO/releases/download/$TAG/xTend.zip"
          $VERSION_TAG = '<p id="version">' + $TAG + '</p>'

          (Get-Content README.md) -replace '<p id="version">.*</p>', $VERSION_TAG | Set-Content README.md
          (Get-Content README.md) -replace "https://github.com/$REPO/releases/download/.*/xTend.zip", $URL | Set-Content README.md

          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add README.md
          git commit -m "Update README with latest release URL [skip ci]"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: merge main into develop
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin develop
          git checkout develop
          git merge main --allow-unrelated-histories --no-edit -X theirs
          git push origin develop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
